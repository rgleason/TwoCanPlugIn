version: 1.3.{build}

clone_folder: c:\project\twocan_pi
shallow_clone: true
image:
- Visual Studio 2015

platform: 
# - x64
  - Win32

configuration: Release
test: OFF

install:
  - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86'
  
# sent environment variables for wxWidgets
  - set WXWIN=C:\wxWidgets-3.0.2
  - set wxWidgets_ROOT_DIR=%WXWIN%
  - set wxWidgets_LIB_DIR=%WXWIN%\lib\vc_dll
  - cmd: SET PATH=%PATH%;%WXWIN%;%wxWidgets_LIB_DIR%;C:\Program Files (x86)\Poedit\Gettexttools\bin;

# install dependencies:
  - choco install poedit nsis -x86

# Download and unzip wxwidgets
  - ps: Start-FileDownload http://downloads.sourceforge.net/project/wxwindows/3.0.2/wxWidgets-3.0.2.zip
  - cmd: 7z x wxwidgets-3.0.2.zip -o%WXWIN% > null

# some debugging information
  - set #Use only while debugging - it reveals the deploy token set on Appveyor
 #- cmake --help

  # build wxWidgets
  - cmd: cd %WXWIN%\build\msw\
  - cmd: nmake -f makefile.vc BUILD=release SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_
  - cmd: nmake -f makefile.vc BUILD=debug SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_
# scripts to run before build
before_build:
  - cd c:\project\twocan_pi
  - ps: Start-FileDownload https://downloads.sourceforge.net/project/opencpnplugins/opencpn_packaging_data/OpenCPN_buildwin.7z
  - cmd: 7z x -y OpenCPN_buildwin.7z -oc:\project\twocan_pi
  - mkdir build
  - cd build
  - ps: Start-FileDownload https://downloads.sourceforge.net/project/opencpnplugins/opencpn_lib/4.2-vc120_xp/opencpn.lib
 #- dir c:\project\twocan_pi\buildwin
 #- dir c:\project\twocan_pi\build
 #- dir c:\project\twocan_pi
  - cmake -T v120_xp ..
#- dir c:\project\twocan_pi\build
 
# to run your custom scripts instead of automatic MSBuild
build_script:
 #- cmake --build . --config debug
 - cmake --build . --target package --config release
 #- dir c:\project\weatherfax_pi\build
 # --target package doesn't work because of nsis not correctly installed
# Artifacts Configuration
artifacts:  # push all files in directory
  path: build\*.exe
  name: installer

# Deploy to GitHub Releases
deploy:
# description: 'release created by AppVeyor CI'
  provider: GitHub
  auth_token: '%GitHub_auth_token%'
  artifact: installer, portable
  draft: true
  prerelease: true
  tag: $(APPVEYOR_REPO_TAG_NAME) # use pushed Tag or insert version name
  on:
    configuration: Release  # Debug contains non-redist MS DLLs
    APPVEYOR_REPO_TAG: true   # deploy on tag push only
#   branch: master   # release from master branch only
